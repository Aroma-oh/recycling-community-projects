spring:
  datasource:
    url: jdbc:mysql://ssts.coxwgsn7huq2.ap-northeast-2.rds.amazonaws.com:3306/sstsDB?useSSL=false&allowPublicKeyRetrieval=true&serverTimezone=UTC&useLegacyDatetimeCode=false
    username: ${DATASOURCE_USERNAME}
    password: ${DATASOURCE_PASSWORD}
    driver-class-name: com.mysql.cj.jdbc.Driver

  jpa:
    hibernate:
      ddl-auto: create
    show-sql: true
    database: mysql
    properties:
      hibernate:
        show_sql: true
        format_sql: true

  security:
    oauth2:
      client:
        registration:
          google:
            client-id: ${OAUTH_CI}
            client-secret: ${OAUTH_CS}
            scope:
              - email # resource owner의 이메일 정보
              - profile # resource owner의 프로필 정보
# spring.security.oauth2.client.registration.google.client-id

#logging:
#  level:
#    root: DEBUG

server:
  servlet:
    encoding:
      force-response: true
mail:
  address:
    admin: '@ssts.com'
jwt:
  key:
    secret: ${JWT_SECRET_KEY}               # 민감한 정보는 시스템 환경 변수에서 로드한다.
  access-token-expiration-minutes: 30
  refresh-token-expiration-minutes: 420
#spring:
#  h2:
#    console:
#      enabled: true
#      path: /h2
#  datasource:
#    url: jdbc:h2:mem:test
#  jpa:
#    hibernate:
#      ddl-auto: create
#    show-sql: true